buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.20.1')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'
//apply plugin: 'application'

//mainClassName = "com.klangfang.core.CompositionServiceApplication"

group = 'com.klangfang'
//version = '0.0.1'
sourceCompatibility = 11
targetCompatibility = 11
repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}


ext {
    springCloudVersion = 'Greenwich.M3'
}

bootJar {
    baseName = 'composition-service'
    version =  '0.0.1'
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-data-rest')
    implementation('org.springframework.boot:spring-boot-starter-hateoas')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.cloud:spring-cloud-starter-oauth2')
    implementation('org.springframework.data:spring-data-rest-hal-browser')
    // this is required in order use the springfox library
    compile group: 'com.google.guava', name: 'guava', version: '27.0-android'
    compile "io.springfox:springfox-swagger2:2.9.2"
    compile "io.springfox:springfox-data-rest:2.9.2"
    compile "io.springfox:springfox-bean-validators:2.9.2"
    compile 'io.springfox:springfox-swagger-ui:2.9.2'
    runtimeOnly('com.h2database:h2')
    runtimeOnly('org.postgresql:postgresql')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}
docker {
    name "${project.group}/${bootJar.baseName}"
    //tags "latest"
    //files bootJar.archivePath
    //dockerfile file('Dockerfile')
    //buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}